package model;

import java.util.Date;
import java.util.concurrent.TimeUnit;

public class TimeSheet {
	private String employeeName;
	private int timeSheetId;
	private int employeeId;
	private Date shiftStartDate;
	private Date shiftEndDate;
	private Date shiftStartTime;
	private Date shiftEndTime;
	private long hoursWorked;
	private String overtimeComment;

	// create a new time sheet, doesnt have the ID, will be created by sqlite
	public TimeSheet(String employeeName, int employeeId, Date shiftStartDate, Date shiftEndDate, Date shiftStartTime,
			Date shiftEndTime) {
		this.employeeName = employeeName;
		this.employeeId = employeeId;
		this.shiftStartDate = shiftStartDate;
		this.shiftEndDate = shiftEndDate;
		this.shiftStartTime = shiftStartTime;
		this.shiftEndTime = shiftEndTime;
		this.timeSheetId = -1;
		this.hoursWorked = calculateHoursWorked();
	}

	// create TimeSheet object from db w/ autogenerated timeSheetId
	public TimeSheet(int timeSheetID, int employeeId, String employeeName, Date shiftStartDate, Date shiftEndDate,
			Date shiftStartTime, Date shiftEndTime, long hoursWorked) {
		this.timeSheetId = timeSheetID;
		this.employeeId = employeeId;
		this.employeeName = employeeName;
		this.shiftStartDate = shiftStartDate;
		this.shiftEndDate = shiftEndDate;
		this.shiftStartTime = shiftStartTime;
		this.shiftEndTime = shiftEndTime;
		this.hoursWorked = hoursWorked ;
	}

	// create a new time sheet with overtimeComment
	public TimeSheet(String employeeName, int employeeId, Date shiftStartDate, Date shiftEndDate, Date shiftStartTime,
			Date shiftEndTime, String overtimeComment) {
		this.employeeName = employeeName;
		this.employeeId = employeeId;
		this.shiftStartDate = shiftStartDate;
		this.shiftEndDate = shiftEndDate;
		this.shiftStartTime = shiftStartTime;
		this.shiftEndTime = shiftEndTime;
		this.overtimeComment = overtimeComment;
		this.timeSheetId = -1;
		this.hoursWorked = calculateHoursWorked();

	}

	// create a new time sheet from DB w/ overtimeComment
	public TimeSheet(int timeSheetID, int employeeId, String employeeName, Date shiftStartDate, Date shiftEndDate,
			Date shiftStartTime, Date shiftEndTime, String overtimeComment, long hoursWorked) {
		this.timeSheetId = timeSheetID;
		this.employeeId = employeeId;
		this.employeeName = employeeName;
		this.shiftStartDate = shiftStartDate;
		this.shiftEndDate = shiftEndDate;
		this.shiftStartTime = shiftStartTime;
		this.shiftEndTime = shiftEndTime;
		this.overtimeComment = overtimeComment;
		this.hoursWorked = hoursWorked;
	}

	public String getEmployeeName() {
		return this.employeeName;
	}

	public int getEmployeeId() {
		return this.employeeId;
	}

	public Date getShiftStartDate() {
		return this.shiftStartDate;
	}

	public Date getShiftEndDate() {
		return this.shiftEndDate;
	}

	public Date getShiftStartTime() {
		return this.shiftStartTime;
	}

	public Date getShiftEndTime() {
		return this.shiftEndTime;
	}

	public void setShiftStartDate(Date shiftStartDate) {
		if (this.shiftStartDate != null) {
			this.shiftStartDate = shiftStartDate;
		}
	}

	public void setShiftEndDate(Date shiftEndDate) {
		if (this.shiftEndDate != null)
			this.shiftEndDate = shiftEndDate;
	}

	public void setShiftStartTime(Date shiftStartTime) {
		if (this.shiftStartTime != null)
			this.shiftStartTime = shiftStartTime;
	}

	public void setShiftEndTime(Date shiftEndTime) {
		if (this.shiftEndTime != null)
			this.shiftEndTime = shiftEndTime;
	}

	public long getHoursWorked() {
		return this.hoursWorked;
	}

	public long calculateHoursWorked() {
		long durationInMillis = shiftEndTime.getTime() - shiftStartTime.getTime();
		return TimeUnit.MILLISECONDS.toHours(durationInMillis);
	}

	public String getOvertimeComment() {
		return this.overtimeComment;
	}

	public void setOvertimeComment(String overtimeComment) {
		this.overtimeComment = overtimeComment;
	}

}
